* Problem 1
** Organic DL
Without using a deep learning framework, code a one-hidden layer neural network model (multi-layer perceptron) for classification.
The last layer is softmax and with cross-entropy loss function.
Implement back-propagation. Use your code to classify MNIST.
You can download MNIST data from http://yann.lecun.com/exdb/mnist/
You can read it as a numpy array using the following function:
#+BEGIN_SRC python
import struct
import numpy as np

    def read_idx(filename):
    with open(filename, ’rb’) as f:
zero, data_type, dims = struct.unpack(’>HBB’, f.read(4))
shape = tuple(struct.unpack(’>I’, f.read(4))[0] for d in range(dims))
return np.fromstring(f.read(), dtype=np.uint8).reshape(shape)
#+END_SRC python
* multi-layer perceptron
* softmax
* cross-entropy loss function
